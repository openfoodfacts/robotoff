openapi: 3.0.0
info:
  title: API Reference
  description: |
    Robotoff provides a simple API allowing consumers to fetch predictions and annotate them.

    All endpoints must be prefixed with `/api/v1`. The full URL is `https://robotoff.openfoodfacts.org/api/v1/{endpoint}`.

    Robotoff can interact with all Openfoodfacts products: Openfoodfacts, Openbeautyfacts, etc. and all environments (production, development, pro). The `server_domain` field should be used to specify the product/environment: `api.openfoodfacts.org` for OFF-prod, `api.openfoodfacts.net` for OFF-dev, `api.openbeautyfacts.org` for OBF-prod,...
  contact: {}
  version: "1.0"
servers:
  - url: https://robotoff.openfoodfacts.org/api/v1/
    description: Production server
  - url: https://robotoff.openfoodfacts.net/api/v1/
    description: Preproduction server

paths:
  /questions/{barcode}:
    get:
      tags:
        - Questions
      summary: Get questions for a given product
      operationId: getQuestionsBarcode
      parameters:
        - name: barcode
          in: path
          description: The product barcode
          required: true
          style: simple
          schema:
            type: string
        - name: lang
          in: query
          description: The language of the question/value
          required: false
          schema:
            type: string
            default: en
        - name: count
          in: query
          description: The number of questions to return
          required: false
          schema:
            type: number
            default: 1
            minimum: 1
        - name: server_domain
          in: query
          description: The server domain
          required: false
          schema:
            type: string 
            default: api.openfoodfacts.org
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - "no_questions"
                      - "found"
                  questions:
                    type: array
                    items:
                      type: object

      deprecated: false
  /questions/random:
    get:
      tags:
        - Questions
      summary: Get random questions
      operationId: getQuestionsRandom
      parameters:
        - name: lang
          in: query
          description: The language of the question/value
          required: false
          schema:
            type: string
            default: en
        - name: count
          in: query
          description: The number of questions to return
          required: false
          schema:
            type: number
            default: 1
            minimum: 1
        - name: server_domain
          in: query
          description: The server domain
          required: false
          schema:
            type: string
            default: api.openfoodfacts.org
        - name: insight_types
          in: query
          description: Comma-separated list, filter by insight types
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter by country tag
          required: false
          schema:
            type: string
        - name: brands
          in: query
          description: Comma-separated list, filter by brands
          required: false
          schema:
            type: string
        - name: value_tag
          in: query
          description: Filter by value tag, i.e the value that is going to be sent to Openfoodfacts
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content: {}
      deprecated: false
  /insights/random:
    get:
      tags:
        - Insights
      summary: Get a random insight
      operationId: Getarandominsight
      parameters:
        - name: count
          in: query
          description: The number of results to return
          required: false
          schema:
            type: number
            default: 1
            minimum: 1
        - name: server_domain
          in: query
          description: The server domain
          required: false
          schema:
            type: string
            default: api.openfoodfacts.org
        - name: type
          in: query
          description: filter by insight type
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: Filter by country tag
          required: false
          schema:
            type: string
        - name: value_tag
          in: query
          description: Filter by value_tag
          required: false
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  insights:
                    type: array
                    items:
                      $ref: "#/components/schemas/InsightSearchResult"

      deprecated: false
  /insights/{barcode}:
    get:
      tags:
        - Insights
      summary: Get all insights for a specific product
      description: >-
        Return all insights associated with a specific product.

        + server_domain (str, optional) - server domain. Default to 'api.openfoodfacts.org'
      operationId: Getallinsightsforaspecificproduct
      parameters:
        - name: barcode
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: integer
            example: Product barcode
      responses:
        "200":
          description: ""
          headers: {}
          content: {}
      deprecated: false
  /insights/detail/{id}:
    get:
      tags:
        - Insights
      summary: Get a specific insight
      operationId: Getaspecificinsight
      parameters:
        - name: id
          in: path
          description: "ID of the insight"
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: ""
          headers: {}
          content: {}
      deprecated: false
  /insights/annotate:
    post:
      tags:
        - Insights
      summary: Submit an annotation
      operationId: Submitanannotation
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                insight_id:
                  type: string
                  description: ID of the insight
                annotation:
                  type: integer
                  description: "Annotation of the prediction: 1 to accept the prediction, 0 to refuse it, and -1 for `unknown`"
                  enum:
                    - 0
                    - 1
                    - -1
                update:
                  type: integer
                  description: "Send the update to Openfoodfacts if `update=1`, don't send the update otherwise. This parameter is useful if the update is performed client-side"
                  default: 1
                  enum:
                    - 0
                    - 1
              required:
                - "insight_id"
                - "annotation"
      responses:
        "200":
          description: ""
          headers: {}
          content: {}
      deprecated: false
components:
  schemas:
    InsightSearchResult:
      description: An insight search result as returned by /insights/random or /insights/{barcode}
      required:
        - id
        - type
        - barcode
        - countries
      type: object
      properties:
        id:
          type: string
          description: Insight ID
        type:
          type: string
          description: Insight type
        barcode:
          type: integer
          description: Barcode of the product
        countries:
          type: array
          description: country tags of the product
          items:
            type: string
      example:
        id: 3cd5aecd-edcc-4237-87d0-6595fc4e53c9
        type: label
        barcode: 9782012805866

tags:
  - name: Questions
  - name: Insights
    description: |
      An insight is a fact about a product that has been either extracted or inferred from the product pictures, characteristics,...
      If the insight is correct, the Openfoodfacts DB can be updated accordingly.

      Current insight types and their description can be found in [robotoff/insights/dataclass.py](https://github.com/openfoodfacts/robotoff/blob/master/robotoff/insights/dataclass.py).
