from typing import Optional

import typer

app = typer.Typer()


@app.command()
def load_model(model_name: str, model_version: Optional[str] = None):
    """Load a model in Triton Inference Server.

    If the model was never loaded, it will be loaded with the default
    configuration generated by Triton.

    Otherwise, the behavior will depend on whether the `--model-version` option is
    provided:

    - If the option is provided, only the specified version will be loaded, the other
        versions will be unloaded.
    - If the option is not provided, the two latest versions will be loaded.
    """
    from robotoff import triton
    from robotoff.utils import get_logger

    get_logger()

    typer.echo(f"Loading model {model_name}")
    typer.echo("** Current models (before) **")
    list_models()
    triton_stub = triton.get_triton_inference_stub()
    triton.load_model(triton_stub, model_name, model_version=model_version)
    typer.echo("Done.")
    typer.echo("**Current models (after) **")
    list_models()


@app.command()
def list_models():
    """List all models loaded in Triton Inference Server."""
    from robotoff import triton

    triton_stub = triton.get_triton_inference_stub()
    models = triton.list_models(triton_stub)

    for model in models:
        typer.echo(f"{model.name} (version: {model.version}), state: {model.state}")


@app.command()
def get_model_config(model_name: str, model_version: Optional[str] = None):
    """Display the configuration of a model in Triton Inference Server."""
    from robotoff import triton

    typer.echo(f"Getting config for model {model_name}")
    triton_stub = triton.get_triton_inference_stub()
    config = triton.get_model_config(triton_stub, model_name, model_version)
    typer.echo(config)


@app.command()
def unload_model(model_name: str):
    """Unload all versions of a model from Triton Inference Server."""
    from robotoff import triton

    typer.echo(f"Unloading model {model_name}")
    triton_stub = triton.get_triton_inference_stub()
    triton.unload_model(triton_stub=triton_stub, model_name=model_name)
    typer.echo("Done.")
    typer.echo("**Current models (after) **")
    list_models()


@app.command()
def download_models():
    """Download all models."""
    from robotoff import triton
    from robotoff.utils import get_logger

    get_logger()
    triton.download_models()
