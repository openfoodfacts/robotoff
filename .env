COMPOSE_PATH_SEPARATOR=;
COMPOSE_FILE=docker-compose.yml;docker/dev.yml;docker/mongodb.yml

# Docker
RESTART_POLICY=no
# for dev only: connection to local product opener network
PO_LOCAL_NET=po_default

# User uid - in dev align this with your own user uid / gid
# see https://gist.github.com/alexgarel/6e6158ee869d6db2192e0441fd58576e
# OFF_UID=1000
# OFF_GID=1000

# Robotoff
TAG=latest

# Robotoff instance gives the environment, either `prod` or `dev`
# (`dev` by default).
# If `prod` is used, openfoodfacts.org domain will be used by default,
# and openfoodfacts.net if `dev` is used.
# Messages to Slack are only enabled if `ROBOTOFF_INSTANCE=prod`.
ROBOTOFF_INSTANCE=dev

# Overwrites the Product Opener domain used. If empty, the domain will
# be inferred from `ROBOTOFF_INSTANCE`
ROBOTOFF_DOMAIN=openfoodfacts.net

# for dev we change static to .net
STATIC_OFF_DOMAIN=https://openfoodfacts.net
# if you want to connect to a Product Opener dev instance on localhost, use:
# STATIC_OFF_DOMAIN=http://openfoodfacts.localhost
# for dev scheme is http
ROBOTOFF_SCHEME=http
# for dev only on localhost
ROBOTOFF_EXPOSE=127.0.0.1:5500
EVENTS_API_URL=

# ElasticSearch
ELASTICSEARCH_HOSTS=elasticsearch.webnet

# Postgres
# use network qualified name for dev for we have two networks
POSTGRES_HOST=postgres.webnet
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_EXPOSE=127.0.0.1:5432

# Triton ML inference server & TF Serving
TRITON_HOST=triton
TF_SERVING_HOST=tf_serving

# InfluxDB
INFLUXDB_HOST=
INFLUXDB_PORT=8086
INFLUXDB_BUCKET=off_metrics
INFLUXDB_AUTH_TOKEN=
# on linux, this will work if you have an influxdb listening on 0.0.0.0
# INFLUXDB_HOST=host.docker.internal

# MongoDB (dev settings, using robotoff-specific MongoDB instance by default)
# To use Product Opener instance, use following commented line
# MONGO_URI=mongodb://mongodb.po_default:27017
MONGO_URI=mongodb://mongodb:27017

# Redis
REDIS_HOST=redis

# OpenFoodFacts API
OFF_PASSWORD=
OFF_USER=

# Utils
SENTRY_DSN=